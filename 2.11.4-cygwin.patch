--- origsrc/gthumb-2.11.4/configure.ac	2010-06-30 04:52:18.826290600 -0500
+++ src/gthumb-2.11.4/configure.ac	2010-06-30 04:49:27.606497400 -0500
@@ -236,11 +236,14 @@ AC_MSG_RESULT([$os_win32])
 AM_CONDITIONAL(OS_WIN32, test "$os_win32" = "yes")
 
 if test "$platform_win32" = "yes" ; then
-	EXTENSION_LIBTOOL_FLAGS='-module -avoid-version -no-undefined -Wl,$(top_builddir)/src/.libs/gthumb.exe.a'
+	EXTENSION_LIBTOOL_FLAGS='-module -avoid-version -no-undefined -Wl,$(top_builddir)/gthumb/.libs/libgthumb.a'
+	GTHUMB_IMPLIB="-lgthumb"
 else
 	EXTENSION_LIBTOOL_FLAGS='-module -avoid-version -disable-static'
+	GTHUMB_IMPLIB=""
 fi
 AC_SUBST(EXTENSION_LIBTOOL_FLAGS)
+AC_SUBST(GTHUMB_IMPLIB)
 
 dnl ===========================================================================
 
--- origsrc/gthumb-2.11.4/data/gthumb.pc.in	2010-05-06 02:31:51.000000000 -0500
+++ src/gthumb-2.11.4/data/gthumb.pc.in	2010-06-30 04:50:26.071841400 -0500
@@ -10,5 +10,5 @@ Name: gthumb
 Description: Image viewer and browser
 Version: @VERSION@
 Requires: gtk+-2.0
-Libs: -L${libdir}
+Libs: -L${libdir} @GTHUMB_IMPLIB@
 Cflags: -I${includedir}
--- origsrc/gthumb-2.11.4/gthumb/Makefile.am	2010-05-20 07:27:38.000000000 -0500
+++ src/gthumb-2.11.4/gthumb/Makefile.am	2010-06-30 04:50:56.193564300 -0500
@@ -236,7 +236,7 @@ gthumb_SOURCES = 					\
 	$(NULL)
 
 if PLATFORM_WIN32
-gthumb_LDFLAGS = -Wl,--export-all-symbols,--out-implib,.libs/gthumb.exe.a
+gthumb_LDFLAGS = -Wl,--export-all-symbols,--out-implib,.libs/libgthumb.a
 endif
 
 gthumb_LDADD =						\
@@ -335,4 +335,9 @@ EXTRA_DIST = 			\
 dist-hook:
 	cd $(distdir); rm -f $(CLEANFILES)
 
+if PLATFORM_WIN32
+install-exec-hook:
+	$(INSTALL_DATA) .libs/libgthumb.a $(DESTDIR)$(pkglibdir)/libgthumb.a
+endif
+
 -include $(top_srcdir)/git.mk
--- origsrc/gthumb-2.11.4/gthumb/gth-extensions.c	2010-06-30 04:52:18.831290900 -0500
+++ src/gthumb-2.11.4/gthumb/gth-extensions.c	2010-06-30 04:18:06.341895200 -0500
@@ -651,9 +651,19 @@ gth_extension_manager_load_extensions (G
 	GFile           *extensions_dir;
 	GFileEnumerator *enumerator;
 	GFileInfo       *info;
+#ifdef G_PLATFORM_WIN32
+	gchar           *path;
+#endif
 
 	g_return_if_fail (GTH_IS_EXTENSION_MANAGER (self));
 
+#ifdef G_PLATFORM_WIN32
+	path = g_getenv("PATH");
+	path = g_strconcat(path, G_SEARCHPATH_SEPARATOR_S GTHUMB_EXTENSIONS_DIR, NULL);
+	g_setenv("PATH", path, TRUE);
+	g_free(path);
+#endif
+
 	extensions_dir = g_file_new_for_path (GTHUMB_EXTENSIONS_DIR);
 	enumerator = g_file_enumerate_children (extensions_dir, G_FILE_ATTRIBUTE_STANDARD_NAME, 0, NULL, NULL);
 	while ((info = g_file_enumerator_next_file (enumerator, NULL, NULL)) != NULL) {
